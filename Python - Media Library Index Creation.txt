import concurrent.futures
import threading

# A list to store the results of the tasks
results = []

# A lock to synchronize access to the results list
lock = threading.Lock()

def create_index_entry(file, lock):
    # Do some work with the file
    result = "Result for " + file

    # Acquire the lock to update the results list
    with lock:
        results.append(result)

def create_media_title_index(folder):
    # Create a thread pool with 4 worker threads
    with concurrent.futures.ThreadPoolExecutor(max_workers=4) as executor:
        # Submit the create_index_entry() function as a task for each file
        for file in files:
            executor.submit(create_index_entry, file, lock)

    # Write the results to the media_index.txt file
    with open("media_index.txt", "w") as f:
        for result in results:
            f.write(result + "\n")
